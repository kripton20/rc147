/**
* Справка по использованию curl mk:@MSITStore:D:\WEB\Programs\CodelobsterSoftware\CodelobsterPHPEdition_5.15\Data\ContextHelp\php_enhanced_ru.chm::/res/ref.curl.html
* * Используйте сценарий PHP для входа в почтовую систему Roundcube.
*
* ВЕРСИЯ СКРИПТА
* Версия 4 (июль 2013 г.)
*
* ЗАГРУЗКА И ДОКУМЕНТАЦИЯ
* http://blog.philippheckel.com/2008/05/16/roundcube-login-via-php-script/
*
* ТРЕБОВАНИЯ
* - Установка Roundcube (проверено с 0.9.2)
* (более старые версии работают с 0.2-beta, 0.3.x, 0.4-beta, 0.5, 0.5.1, 0.7.2)
*
* - Установите для "check_ip"/"ip_check" в файле config/main.inc.php значение FALSE.
*     Почему? Сервер будет выполнять вход в систему, а не клиент (= два разных IP-адреса)
*
* УСТАНОВКА
* - Установите RC на свой сервер, чтобы к нему можно было получить доступ через браузер,
* например, на www.example.com/roundcube/
*
* - Загрузите этот скрипт и удалите все пробелы и новые строки
* до «<? php» и после «?>»
*
* - Включите класс в свой собственный сценарий и используйте его.
*
* ИСПОЛЬЗОВАНИЕ
* Класс предоставляет четыре общедоступных метода:
*
*   - login($username, $password)
* Выполните вход в почтовую систему Roundcube.
*
* Примечание: если клиент уже вошел в систему, сценарий повторно авторизует пользователя (выход/вход).
* Чтобы предотвратить такое поведение, используйте функцию isLoggedIn().
*
* Возвращает: TRUE, если вход в систему прошел успешно, FALSE, если комбинация пользователь/пароль неверна.
* Броски: может вызвать исключение RoundcubeLoginException, если Roundcube отправляет неожиданный ответ
* (это может произойти, если новая версия Roundcube будет вести себя иначе).
*
* - isLoggedIn()
* Проверяет, вошел ли клиент/браузер в систему и есть ли действительный сеанс Roundcube.
*
* Возвращает: TRUE, если пользователь вошел в систему, в противном случае - FALSE.
* Броски: может также вызвать исключение RoundcubeLoginException (см. Выше).
*
*   - logout()
* Выполняет выход из текущего сеанса Roundcube.
*
* Возвращает: TRUE, если выход прошел успешно, в противном случае - FALSE.
* Броски: может также вызвать исключение RoundcubeLoginException (см. Выше).
*
*   - redirect()
* Просто перенаправляет на Roundcube.
*
* - setHostname($hostname)
* Заменить имя хоста по умолчанию. Возможен только локальный хост.
*
*   - setPort($port)
* Отменить автоматическое определение порта.
*
* - setSSL($enableSSL)
* Отменить автоматическое обнаружение SSL.
*
* ОБРАЗЕЦ КОДА АВТОМАТИЧЕСКОЙ АВТОРИЗАЦИИ
*   <?php
*
*       include "RoundcubeLogin.class.php";
*
* // Создать объект входа и включить отладку
*       $rcl = new RoundcubeLogin("/roundcube/", true);
*
*       try {
* // Если мы уже вошли в систему, просто перенаправляем
*           if ($rcl->isLoggedIn())
*               $rcl->redirect();
*
* // Если нет, попробуйте войти в систему и просто перенаправить в случае успеха
*           $rcl->login("your-email-address", "plain-text-password");
*
*           if ($rcl->isLoggedIn())
*               $rcl->redirect();
*
* // Если логин не удался, вывести сообщение об ошибке
*           die("ERROR: ошибка входа в систему из-за неправильной комбинации пользователя и пароля.");
*       }
*       catch (RoundcubeLoginException $ex) {
*           echo "ERROR: техническая проблема, ".$ex->getMessage();
*           $rcl->dumpDebugStack(); exit;
*       }
*
*   ?>
*
* ИСПРАВЛЕНИЕ ПРОБЛЕМ
* - Обязательно удалите все пробелы перед "<?php" и после "?>"
* - включить режим отладки (установить второй параметр конструктора в TRUE)
* - Спросите меня, есть ли у вас проблемы :-)
*
* АВТОР/ЛИЦЕНЗИЯ/ВЕРСИЯ
* - Автор Филипп Хекель; Найдите соответствующую запись в блоге по адресу
*     http://blog.philippheckel.com/2008/05/16/roundcube-login-via-php-script/
*
* - Обновлено в июле 2013 г., протестировано с Ubuntu/Firefox 3
* Нет лицензии. Не стесняйтесь использовать :-)
*
* - Обновленный скрипт протестирован с Roundcube 0.9.2.
* Старые версии скрипта работают с Roundcube 0.2, 0.3, 0.4-beta,
* 0.5.1 и 0.7.2 (см. Сообщение в блоге выше)
*
*/
    /**
    * Относительный путь к базовому каталогу Roundcube на сервере.
    *
    * Можно установить через первый аргумент в конструкторе.
    * Если URL-адрес www.example.com/roundcube/, установите его как «/roundcube/».
    *
    * @var string
    */
    private $rcPath;

    /**
    * Идентификатор сеанса Roundcube.
    *
    * RC отправляет в ответ свой идентификатор сеанса. Если первая попытка не
    * работает, функция входа в систему повторяет попытку с идентификатором сеанса. Это делает
    * работают в большинстве случаев.
    *
    * @var string
    */
    private $rcSessionID;

    /**
    * Понятия не имею, что это...
    */
    private $rcSessionAuth;

    /**
    * Текущий статус сеанса Roundcube.
    * 0 = неизвестно, 1 = вход в систему выполнен, -1 = вход в систему не выполнен.
    *
    * @var int
    */
    private $rcLoginStatus;

    /**
    * Roundcube 0.5.1 добавляет токен запроса для «безопасности». Эта переменная
    * сохраняет последний токен и отправляет его с запросами входа и выхода.
    *
    * @var string
    */
    private $lastToken;

    /**
    * Имя хоста Roundcube. По умолчанию автоматически используется значение $_SERVER['HTTP_HOST'].
    *
    * @var string
    */
    private $hostname;

    /**
    * Порт Roundcube. По умолчанию автоматически устанавливается 80/HTTP или 443/HTTPS.
    *
    * @var int
    */
    private $port;

    /**
    * Соединение по протоколу SSL/TLS. По умолчанию содержится
    * в переменной $_SERVER['HTTPS'].
    *
    * @var boolean|null
    */
    private $ssl;

    /**
    * Можно включить отладку, задав второй аргумент в конструкторе TRUE.
    *
    * @var bool
    */
    private $debugEnabled;

    /**
    * Держим отладочные сообщения в стеке. Чтобы сбросить, вызываем
    * функцию dumpDebugStack().
    *
    * @var array
    */
    private $debugStack;

    /**
    * Создаём новый класс RoundcubeLogin.
    *
    * @param string Относительный путь веб-сервера к установке RC, например: /roundcube/
    * @param bool Включает отладку и показывает полный POST и ответ.
    */